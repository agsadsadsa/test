name: Build and Sign .exe

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Upgrade pip, setuptools, and wheel
      run: |
        python -m pip install --upgrade pip setuptools wheel

    - name: Install dependencies
      run: |
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Install Windows SDK for signtool
      run: choco install windows-sdk-10.0

    - name: Decode code signing certificate
      run: echo "$CODE_SIGNING_CERTIFICATE" | base64 -d > my_certificate.pfx

    - name: Build .exe with PyInstaller
      run: pyinstaller --onefile --add-data "alarm.png;." --add-data "clock_icon.png;." --add-data "reminder.wav;." --add-data "alarms.db;." alarm_app.py

    - name: Sign the .exe file
      run: signtool sign /f my_certificate.pfx /p "$CODE_SIGNING_PASSWORD" dist/alarm_app.exe

    - name: Create a new tag
      run: |
        VERSION=$(date +%Y%m%d%H%M%S)  # Optional: Create a version based on timestamp or something else
        git tag "1" 
        git push origin "1" 

    - name: Upload .exe to GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        files: dist/alarm_app.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
